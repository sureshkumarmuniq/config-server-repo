
server.port=8081

spring.datasource.url=jdbc:mysql://localhost:3306/employee_db
spring.datasource.username=root
spring.datasource.password=Surevec@2020

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
 
spring.jpa.hibernate.ddl-auto=update

eureka.instance.client.serverUrl.defaultZone= http://localhost:8761/eureka/

#spring.config.import=optional:configserver:http://localhost:8888
management.endpoints.web.exposure.include=*

# have to spin up RABBIT-MQ docker container and configure below creds.
# for /busrefresh actuator endpoint to load the config changes from git without restarting the config server and services.
# employee service is the subscriber to rabbitMQ topic.
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5762
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

spring.boot.message=hello, Employee Microservice with cloud bus and rabbitmq on june18th!

# Actuator endpoints for circuit breaker.
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=ALWAYS
management.health.circuitbreakers.enabled=true

# circuit breaker configuration.
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.sliding-window-size=10
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.sliding-window-type=count_based

# Retry configuration.
resilience4j.retry.instances.EMPLOYEE-SERVICE.registerHealthIndicator=true
resilience4j.retry.instances.EMPLOYEE-SERVICE.maxRetryAttempts=5
resilience4j.retry.instances.EMPLOYEE-SERVICE.waidDuration=1s
